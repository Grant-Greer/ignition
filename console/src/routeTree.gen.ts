/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MachinesRouteRouteImport } from './routes/machines.route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MachinesIndexRouteImport } from './routes/machines.index'
import { Route as MachinesMachineIdRouteImport } from './routes/machines.$machineId'

const MachinesRouteRoute = MachinesRouteRouteImport.update({
  id: '/machines',
  path: '/machines',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MachinesIndexRoute = MachinesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MachinesRouteRoute,
} as any)
const MachinesMachineIdRoute = MachinesMachineIdRouteImport.update({
  id: '/$machineId',
  path: '/$machineId',
  getParentRoute: () => MachinesRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/machines': typeof MachinesRouteRouteWithChildren
  '/machines/$machineId': typeof MachinesMachineIdRoute
  '/machines/': typeof MachinesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/machines/$machineId': typeof MachinesMachineIdRoute
  '/machines': typeof MachinesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/machines': typeof MachinesRouteRouteWithChildren
  '/machines/$machineId': typeof MachinesMachineIdRoute
  '/machines/': typeof MachinesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/machines' | '/machines/$machineId' | '/machines/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/machines/$machineId' | '/machines'
  id: '__root__' | '/' | '/machines' | '/machines/$machineId' | '/machines/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MachinesRouteRoute: typeof MachinesRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/machines': {
      id: '/machines'
      path: '/machines'
      fullPath: '/machines'
      preLoaderRoute: typeof MachinesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/machines/': {
      id: '/machines/'
      path: '/'
      fullPath: '/machines/'
      preLoaderRoute: typeof MachinesIndexRouteImport
      parentRoute: typeof MachinesRouteRoute
    }
    '/machines/$machineId': {
      id: '/machines/$machineId'
      path: '/$machineId'
      fullPath: '/machines/$machineId'
      preLoaderRoute: typeof MachinesMachineIdRouteImport
      parentRoute: typeof MachinesRouteRoute
    }
  }
}

interface MachinesRouteRouteChildren {
  MachinesMachineIdRoute: typeof MachinesMachineIdRoute
  MachinesIndexRoute: typeof MachinesIndexRoute
}

const MachinesRouteRouteChildren: MachinesRouteRouteChildren = {
  MachinesMachineIdRoute: MachinesMachineIdRoute,
  MachinesIndexRoute: MachinesIndexRoute,
}

const MachinesRouteRouteWithChildren = MachinesRouteRoute._addFileChildren(
  MachinesRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MachinesRouteRoute: MachinesRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
